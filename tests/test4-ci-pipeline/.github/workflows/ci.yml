name: CI Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    test-backend:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.22"

            - name: Cache Go modules
              uses: actions/cache@v3
              with:
                  path: ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: |
                  cd backend3
                  go mod download

            - name: Run tests
              run: |
                  cd backend3
                  go test -v ./...

            - name: Build backend
              run: |
                  cd backend3
                  go build -o main .

    test-frontend:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: "3.16.0"
                  channel: "stable"

            - name: Cache Flutter dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.pub-cache
                      frontend1/.dart_tool
                  key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-flutter-

            - name: Install Flutter dependencies
              run: |
                  cd frontend1
                  flutter pub get

            - name: Run Flutter tests
              run: |
                  cd frontend1
                  flutter test

            - name: Build Flutter web
              run: |
                  cd frontend1
                  flutter build web

    build-and-push:
        needs: [test-backend, test-frontend]
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build backend Docker image
              run: |
                  cd backend3
                  docker build -t counter-backend:${{ github.sha }} .

            - name: Build frontend Docker image
              run: |
                  cd frontend1
                  docker build -t counter-frontend:${{ github.sha }} .

            - name: Test Docker Compose
              run: |
                  docker compose up --build -d
                  sleep 30
                  curl -f http://localhost:8080/healthz || exit 1
                  curl -f http://localhost/ || exit 1
                  docker compose down

    security-scan:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  scan-type: "fs"
                  scan-ref: "."
                  format: "sarif"
                  output: "trivy-results.sarif"

            - name: Upload Trivy scan results
              uses: github/codeql-action/upload-sarif@v2
              with:
                  sarif_file: "trivy-results.sarif"
